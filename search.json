[{"path":[]},{"path":"https://hubverse-org.github.io/hubExamples/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://hubverse-org.github.io/hubExamples/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://hubverse-org.github.io/hubExamples/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying standards acceptable behavior. Enforcement responsibility Code Conduct Committee, take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Instances abusive, harassing, otherwise unacceptable behavior may reported member Code Conduct Committee. complaints reviewed investigated promptly fairly. Code Conduct Committee use Enforcement Manual determining consequences action deem violation Code Conduct. community leaders Code Conduct Committee members obligated respect privacy security reporter incident.","code":""},{"path":"https://hubverse-org.github.io/hubExamples/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://hubverse-org.github.io/hubExamples/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://hubverse-org.github.io/hubExamples/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to hubExamples","title":"Contributing to hubExamples","text":"outlines propose change hubExamples. general info contributing , hubverse packages, please see hubverse contributing guide. can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://hubverse-org.github.io/hubExamples/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to hubExamples","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed). procedures contributing bigger changes, code particular, generally follow advised tidyverse dev team, including following tidyverse style guide code recording user facing changes NEWS.md.","code":""},{"path":"https://hubverse-org.github.io/hubExamples/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to hubExamples","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"hubverse-org/hubExamples\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Follow pull request checklist create Git branch pull request (PR). recommend using usethis::pr_init(\"name/brief-description/issue\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first heading—usually labelled “development version”). Follow style described https://style.tidyverse.org/news.html. ’re changing scripts data-raw/, can run tests locally: devtools::test() (contents data-raw included package, tests skipped R checks).","code":""},{"path":"https://hubverse-org.github.io/hubExamples/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to hubExamples","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://hubverse-org.github.io/hubExamples/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to hubExamples","text":"Please note hubExamples project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://hubverse-org.github.io/hubExamples/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Consortium Infectious Disease Modeling Hubs Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://hubverse-org.github.io/hubExamples/articles/forecast_data.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Example forecast hub data","text":"hubExamples package provides three data sets contain example model output target data example forecast hub: forecast_outputs, forecast_target_ts, forecast_oracle_output. forecasts target data subset model outputs target data provided example-complex-forecast-hub. data turn derived forecast submissions target data FluSight Forecast Hub 2022/23 season. begin high level overview data objects describe different forecast targets detail.","code":""},{"path":"https://hubverse-org.github.io/hubExamples/articles/forecast_data.html","id":"example-forecast-output-data","dir":"Articles","previous_headings":"Overview","what":"Example forecast output data","title":"Example forecast hub data","text":"example forecasts provided forecast_outputs derived forecasts submitted FluSight hub three models: Flusight-baseline, MOBS-GLEAM_FLUH, PSI-DICE. original forecasts submitted hub quantile format, modified submissions provide examples additional model output types targets. predictions output types viewed illustrations data formats, real examples forecasts. describe methods used creating forecast output types . snippet shows format forecast_outputs (note: throughout document, may need scroll right within displays code output see data frame columns). data frame four groups columns (see hubverse documentation information data formats): model_id identifies model produced predictions. location column contains FIPS code identifying location predicted. reference_date date ISO format gives Saturday ending week predictions generated. horizon gives difference reference_date target date forecasts (target_end_date, see next item) units weeks. Informally, describes “far ahead” predictions targeting. target_end_date date ISO format gives Saturday ending week predicted. example, target_end_date \"2022-12-17\", predictions quantity relating influenza activity week Sunday, December 11, 2022 Saturday, December 17, 2022. target describes target quantity prediction. example, target \"wk flu hosp rate\" weekly rate hospital admissions per 100,000 population. targets included example described sections . output_type specifies representation predictive distribution. output_type_id gives additional identifying information predictions; information column specific output_type. value column contains value model’s prediction. original hub submissions contained predictions many locations dates, quantile forecasts provided 23 different quantile levels ranging 0.01 0.99. make example data manageable, forecast_outputs object contains subset outputs two locations (Massachusetts, FIPS code \"25\", Texas, FIPS code \"48\") two reference dates (2022-11-19 2022-12-17). Additionally, quantile forecasts subset seven quantile levels: 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95. task id variables used values variables specific modeling hub. example, hub collecting predictions locations US states use different location identifier FIPS codes, hub might introduce additional task id variables identifier age group disease variant depending goals hub. See hubverse documentation information task id variables.","code":"head(forecast_outputs) #> # A tibble: 6 × 9 #>   model_id          reference_date target          horizon location target_end_date output_type output_type_id value #>   <chr>             <date>         <chr>             <int> <chr>    <date>          <chr>       <chr>          <dbl> #> 1 Flusight-baseline 2022-11-19     wk inc flu hosp       0 25       2022-11-19      quantile    0.05              22 #> 2 Flusight-baseline 2022-11-19     wk inc flu hosp       0 25       2022-11-19      quantile    0.1               31 #> 3 Flusight-baseline 2022-11-19     wk inc flu hosp       0 25       2022-11-19      quantile    0.25              45 #> 4 Flusight-baseline 2022-11-19     wk inc flu hosp       0 25       2022-11-19      quantile    0.5               51 #> 5 Flusight-baseline 2022-11-19     wk inc flu hosp       0 25       2022-11-19      quantile    0.75              57 #> 6 Flusight-baseline 2022-11-19     wk inc flu hosp       0 25       2022-11-19      quantile    0.9               71"},{"path":"https://hubverse-org.github.io/hubExamples/articles/forecast_data.html","id":"example-forecast-target-data","dir":"Articles","previous_headings":"Overview","what":"Example forecast target data","title":"Example forecast hub data","text":"predictions targets based influenza hospital admissions reported US National Healthcare Safety Network (NHSN). forecast_target_ts object contains observed values hospital admissions time series format: See hubverse documentation information time series target data.","code":"head(forecast_target_ts) #> # A tibble: 6 × 3 #>   date       location observation #>   <date>     <chr>          <dbl> #> 1 2020-01-11 01                 0 #> 2 2020-01-11 15                 0 #> 3 2020-01-11 18                 0 #> 4 2020-01-11 27                 0 #> 5 2020-01-11 30                 0 #> 6 2020-01-11 37                 0 tail(forecast_target_ts) #> # A tibble: 6 × 3 #>   date       location observation #>   <date>     <chr>          <dbl> #> 1 2023-11-11 51                88 #> 2 2023-11-11 50                 3 #> 3 2023-11-11 53                20 #> 4 2023-11-11 55                19 #> 5 2023-11-11 54                12 #> 6 2023-11-11 56                 7"},{"path":"https://hubverse-org.github.io/hubExamples/articles/forecast_data.html","id":"example-forecast-oracle-output","dir":"Articles","previous_headings":"Overview","what":"Example forecast oracle output","title":"Example forecast hub data","text":"forecast_oracle_output data derived forecast_target_ts data, represents predictions generated “oracle model” knew observed data advance. format oracle output data similar format forecast_outputs: data frame subset columns forecast_outputs sufficient identify observed value corresponding prediction, including location, target_end_date, target, output_type, output_type_id, along predictions oracle model, recorded oracle_value column. Note reference_date horizon columns needed data frame, since target_end_date sufficient align observations predictions. See hubverse documentation information oracle output data.","code":"head(forecast_oracle_output) #> # A tibble: 6 × 6 #>   location target_end_date target          output_type output_type_id oracle_value #>   <chr>    <date>          <chr>           <chr>       <chr>                 <dbl> #> 1 US       2022-10-22      wk inc flu hosp quantile    NA                     2380 #> 2 01       2022-10-22      wk inc flu hosp quantile    NA                      141 #> 3 02       2022-10-22      wk inc flu hosp quantile    NA                        3 #> 4 04       2022-10-22      wk inc flu hosp quantile    NA                       22 #> 5 05       2022-10-22      wk inc flu hosp quantile    NA                       50 #> 6 06       2022-10-22      wk inc flu hosp quantile    NA                      124"},{"path":"https://hubverse-org.github.io/hubExamples/articles/forecast_data.html","id":"further-detail-on-the-forecast-targets","dir":"Articles","previous_headings":"","what":"Further detail on the forecast targets","title":"Example forecast hub data","text":"example forecast data contains following combinations target output_type: describe targets following sections.","code":"forecast_outputs |>   distinct(target, output_type) |>   arrange(target, output_type) #> # A tibble: 6 × 2 #>   target                    output_type #>   <chr>                     <chr>       #> 1 wk flu hosp rate          cdf         #> 2 wk flu hosp rate category pmf         #> 3 wk inc flu hosp           mean        #> 4 wk inc flu hosp           median      #> 5 wk inc flu hosp           quantile    #> 6 wk inc flu hosp           sample"},{"path":"https://hubverse-org.github.io/hubExamples/articles/forecast_data.html","id":"the-wk-inc-flu-hosp-target","dir":"Articles","previous_headings":"Further detail on the forecast targets","what":"The wk inc flu hosp target","title":"Example forecast hub data","text":"wk inc flu hosp target represents weekly new hospital admissions confirmed influenza diagnosis. predictions target four output types: mean, median, quantile sample. Note quantile predictions contributed directly modelers FluSight hub, median predictions correspond exactly quantile predictions probability level 0.5. obtained sample predictions quantile forecasts using distfromq package estimating full quantile function submitted quantile predictions individual location target date, drawing samples marginal distributions using probability integral transform method, using copula corresponding discrete-time AR(0.9) Gaussian process induce dependence across sequential horizons. Mean predictions obtained mean samples drawn location target date combination. following plot shows quantile median predictions along observed hospital admission counts Massachusetts Texas.  following plot shows target data predictive samples just predictions Massachusetts reference date December 17, 2022 generated “MOBS-GLEAM_FLUH” model.  purposes evaluating predictions, can helpful join observed target values, contained forecast_oracle_output, data frame forecast outputs. enables direct comparison predictions observations. illustrate , omitting columns display convenience:","code":"plot_step_ahead_model_output(   model_out_tbl = forecast_outputs |>     filter(output_type %in% c(\"quantile\", \"median\")),   target_data = forecast_target_ts |>     filter(location %in% c(\"25\", \"48\"),            date >= \"2022-10-01\", date <= \"2023-04-01\"),   use_median_as_point = TRUE,   x_col_name = \"target_end_date\",   intervals = c(0.5, 0.8, 0.9),   facet = \"location\",   group = \"reference_date\",   interactive = FALSE ) #> Warning: ! `output_type_id` column must be a numeric. Converting to numeric. ggplot() +   geom_line(     data = forecast_target_ts |>       filter(location == \"25\",              date >= \"2022-10-01\", date <= \"2023-04-01\"),     mapping = aes(x = date, y = observation)   ) +   geom_line(     data = forecast_outputs |>       filter(         location == \"25\",         model_id == \"MOBS-GLEAM_FLUH\",         reference_date == \"2022-12-17\",         output_type == \"sample\"       ),     mapping = aes(x = target_end_date, y = value, group = output_type_id),     color = \"blue\",     alpha = 0.3   ) +   theme_bw() forecast_outputs |>   filter(target == \"wk inc flu hosp\") |>   left_join(forecast_oracle_output) |>   select(-model_id, -reference_date, -horizon) #> Joining with `by = join_by(target, location, target_end_date, output_type, output_type_id)` #> # A tibble: 5,232 × 7 #>    target          location target_end_date output_type output_type_id value oracle_value #>    <chr>           <chr>    <date>          <chr>       <chr>          <dbl>        <dbl> #>  1 wk inc flu hosp 25       2022-11-19      quantile    0.05              22           NA #>  2 wk inc flu hosp 25       2022-11-19      quantile    0.1               31           NA #>  3 wk inc flu hosp 25       2022-11-19      quantile    0.25              45           NA #>  4 wk inc flu hosp 25       2022-11-19      quantile    0.5               51           NA #>  5 wk inc flu hosp 25       2022-11-19      quantile    0.75              57           NA #>  6 wk inc flu hosp 25       2022-11-19      quantile    0.9               71           NA #>  7 wk inc flu hosp 25       2022-11-19      quantile    0.95              80           NA #>  8 wk inc flu hosp 25       2022-11-26      quantile    0.05               5           NA #>  9 wk inc flu hosp 25       2022-11-26      quantile    0.1               21           NA #> 10 wk inc flu hosp 25       2022-11-26      quantile    0.25              38           NA #> # ℹ 5,222 more rows"},{"path":"https://hubverse-org.github.io/hubExamples/articles/forecast_data.html","id":"the-wk-flu-hosp-rate-target","dir":"Articles","previous_headings":"Further detail on the forecast targets","what":"The wk flu hosp rate target","title":"Example forecast hub data","text":"wk flu hosp rate target represents rate weekly confirmed influenza hospital admissions per 100,000 population. Note target included FluSight hub; introduced illustrative purposes. used population values 6,978,662 Massachusetts 29,914,599 Texas. population values sourced auxiliary data file provided FluSight hub, also reproduced example-complex-forecast-hub repository. target, created cumulative distribution function (CDF) predictions evenly spaced CDF evaluation points ranging 0.25 25 increments 0.25 hospitalizations per 100,000 population: CDF output_type, output_type_id contains value predictive CDF evaluated, value contains predicted probability target less equal evaluation point. example, value row output_type_id equal 1.5 contains model’s estimated probability rate hospital admissions Texas week December 17, 2022 less equal 1.5 admissions per 100,000 population. , CDF values estimated original quantile forecasts using methods distfromq package. following plot illustrates predictive CDFs produced MOBS-GLEAM_FLUH model Massachusetts reference date 2022-12-17, target_end_date shown separate facet. Also shown orange CDF representing observation target, 9.75 10 hospitalizations per 100,000 population. CDF corresponds point mass observed value, value 0 observation value 1 observation.","code":"forecast_outputs |>   filter(target == \"wk flu hosp rate\") |>   select(-model_id, -reference_date, -horizon) |>   head() #> # A tibble: 6 × 6 #>   target           location target_end_date output_type output_type_id  value #>   <chr>            <chr>    <date>          <chr>       <chr>           <dbl> #> 1 wk flu hosp rate 25       2022-11-19      cdf         0.25           0.0409 #> 2 wk flu hosp rate 25       2022-11-19      cdf         0.5            0.131  #> 3 wk flu hosp rate 25       2022-11-19      cdf         0.75           0.568  #> 4 wk flu hosp rate 25       2022-11-19      cdf         1              0.891  #> 5 wk flu hosp rate 25       2022-11-19      cdf         1.25           0.965  #> 6 wk flu hosp rate 25       2022-11-19      cdf         1.5            0.985 # Subset the forecasts and oracle values to those that we will plot forecasts_to_plot <- forecast_outputs |>   filter(     model_id == \"MOBS-GLEAM_FLUH\",     target == \"wk flu hosp rate\",     location == \"25\",     reference_date == \"2022-12-17\"   ) |>   mutate(output_type_id = as.numeric(output_type_id)) head(forecasts_to_plot) #> # A tibble: 6 × 9 #>   model_id        reference_date target           horizon location target_end_date output_type output_type_id    value #>   <chr>           <date>         <chr>              <int> <chr>    <date>          <chr>                <dbl>    <dbl> #> 1 MOBS-GLEAM_FLUH 2022-12-17     wk flu hosp rate       0 25       2022-12-17      cdf                   0.25 8.52e-21 #> 2 MOBS-GLEAM_FLUH 2022-12-17     wk flu hosp rate       0 25       2022-12-17      cdf                   0.5  1.63e-19 #> 3 MOBS-GLEAM_FLUH 2022-12-17     wk flu hosp rate       0 25       2022-12-17      cdf                   0.75 2.80e-18 #> 4 MOBS-GLEAM_FLUH 2022-12-17     wk flu hosp rate       0 25       2022-12-17      cdf                   1    4.37e-17 #> 5 MOBS-GLEAM_FLUH 2022-12-17     wk flu hosp rate       0 25       2022-12-17      cdf                   1.25 6.17e-16 #> 6 MOBS-GLEAM_FLUH 2022-12-17     wk flu hosp rate       0 25       2022-12-17      cdf                   1.5  7.87e-15  oracle_outputs_to_plot <- forecast_oracle_output |>   filter(     target == \"wk flu hosp rate\",     location == \"25\",     target_end_date %in% forecasts_to_plot$target_end_date   ) |>   mutate(output_type_id = as.numeric(output_type_id)) head(oracle_outputs_to_plot) #> # A tibble: 6 × 6 #>   location target_end_date target           output_type output_type_id oracle_value #>   <chr>    <date>          <chr>            <chr>                <dbl>        <dbl> #> 1 25       2022-12-17      wk flu hosp rate cdf                   0.25            0 #> 2 25       2022-12-17      wk flu hosp rate cdf                   0.5             0 #> 3 25       2022-12-17      wk flu hosp rate cdf                   0.75            0 #> 4 25       2022-12-17      wk flu hosp rate cdf                   1               0 #> 5 25       2022-12-17      wk flu hosp rate cdf                   1.25            0 #> 6 25       2022-12-17      wk flu hosp rate cdf                   1.5             0  # We illustrate that the cdf values recorded in forecast_oracle_output # correspond to a point mass at the observed hospitalization rate. first_one_ind <- min(which(oracle_outputs_to_plot$oracle_value == 1)) oracle_outputs_to_plot[(first_one_ind - 2):(first_one_ind + 2), ] #> # A tibble: 5 × 6 #>   location target_end_date target           output_type output_type_id oracle_value #>   <chr>    <date>          <chr>            <chr>                <dbl>        <dbl> #> 1 25       2022-12-17      wk flu hosp rate cdf                   9.5             0 #> 2 25       2022-12-17      wk flu hosp rate cdf                   9.75            0 #> 3 25       2022-12-17      wk flu hosp rate cdf                  10               1 #> 4 25       2022-12-17      wk flu hosp rate cdf                  10.2             1 #> 5 25       2022-12-17      wk flu hosp rate cdf                  10.5             1  # Make the plot ggplot() +   geom_line(     mapping = aes(x = output_type_id, y = value,                   color = \"forecast\", linetype = \"forecast\"),     data = forecasts_to_plot   ) +   geom_line(     mapping = aes(x = output_type_id, y = oracle_value,                   color = \"oracle_value\", linetype = \"oracle_value\"),     data = oracle_outputs_to_plot,   ) +   scale_color_manual(     \"CDF\",     values = c(\"black\", \"orange\")   ) +   scale_linetype_manual(     \"CDF\",     values = c(1, 2)   ) +   facet_wrap(vars(target_end_date)) +   xlab(\"output_type_id (units are hospital admissions per 100,000 population)\") +   ylab(\"CDF value (units are probability)\")"},{"path":"https://hubverse-org.github.io/hubExamples/articles/forecast_data.html","id":"the-wk-flu-hosp-rate-category-target","dir":"Articles","previous_headings":"Further detail on the forecast targets","what":"The wk flu hosp rate category target","title":"Example forecast hub data","text":"“wk flu hosp rate category” target represents categorical intensity level influenza activity, defined “low” (hospital admissions rate per 100,000 ≤\\leq 2.5), “moderate” (2.5 < admissions rate ≤\\leq 5), “high” (5 < admissions rate ≤\\leq 7.5), “high” (7.5 < admissions rate). forecast_outputs object example forecasts target PMF format, probability assigned intensity category. , forecasts target collected FluSight hub; derived predictions submitted quantile forecasts using distfromq package. context, following plot displays observed data 2022/23 season scale hospital admissions per 100,000 population, boundaries intensity categories denoted horizontal lines:  plot showing predictive distributions targets three included models. Color indicates predicted probability intensity category. observed category indicated + plot, unobserved categories indicated o. , PMF value recorded forecast_oracle_output corresponds point mass observed category, value 1 observed category value 0 categories.","code":"# a data frame containing location FIPS codes and population values # in units of 100,000 people population_values <- data.frame(   location = c(\"25\", \"48\"),   population_100k = c(6978662, 29914599) / 100000 )  # compute observed hospital admission rates for the 2022/23 season observed_rates <- forecast_target_ts |>   filter(location %in% c(\"25\", \"48\"),          date >= \"2022-10-01\", date <= \"2023-04-01\") |>   left_join(population_values) |>   mutate(rate = observation / population_100k) #> Joining with `by = join_by(location)`  # plot along with intensity thresholds ggplot() +   geom_line(     mapping = aes(x = date, y = rate),     data = observed_rates   ) +   geom_hline(     mapping = aes(yintercept = y),     linetype = 2,     data = data.frame(y = c(2.5, 5, 7.5))   ) +   facet_wrap(vars(location)) # extract a subset of forecasts to plot and # set the output_type_id to be an ordered factor forecasts_to_plot <- forecast_outputs |>   filter(     target == \"wk flu hosp rate category\",     reference_date == \"2022-12-17\"   ) |>   mutate(     output_type_id = factor(output_type_id,                             levels = c(\"low\", \"moderate\", \"high\", \"very high\"),                             ordered = TRUE)   ) forecasts_to_plot |>   select(-model_id, -reference_date, -horizon) |>   head() #> # A tibble: 6 × 6 #>   target                    location target_end_date output_type output_type_id      value #>   <chr>                     <chr>    <date>          <chr>       <ord>               <dbl> #> 1 wk flu hosp rate category 25       2022-12-17      pmf         low            0.0000180  #> 2 wk flu hosp rate category 25       2022-12-17      pmf         moderate       0.00157    #> 3 wk flu hosp rate category 25       2022-12-17      pmf         high           0.0397     #> 4 wk flu hosp rate category 25       2022-12-17      pmf         very high      0.959      #> 5 wk flu hosp rate category 25       2022-12-24      pmf         low            0.00000970 #> 6 wk flu hosp rate category 25       2022-12-24      pmf         moderate       0.00294  # extract the corresponding oracle values oracle_outputs_to_plot <- forecast_oracle_output |>   filter(     location %in% c(\"25\", \"48\"),     target == \"wk flu hosp rate category\",     target_end_date %in% forecasts_to_plot$target_end_date   ) |>   mutate(     output_type_id = factor(output_type_id,                             levels = c(\"low\", \"moderate\", \"high\", \"very high\"),                             ordered = TRUE)   ) oracle_outputs_to_plot |>   head() #> # A tibble: 6 × 6 #>   location target_end_date target                    output_type output_type_id oracle_value #>   <chr>    <date>          <chr>                     <chr>       <ord>                 <dbl> #> 1 25       2022-12-17      wk flu hosp rate category pmf         low                       0 #> 2 25       2022-12-17      wk flu hosp rate category pmf         moderate                  0 #> 3 25       2022-12-17      wk flu hosp rate category pmf         high                      0 #> 4 25       2022-12-17      wk flu hosp rate category pmf         very high                 1 #> 5 48       2022-12-17      wk flu hosp rate category pmf         low                       0 #> 6 48       2022-12-17      wk flu hosp rate category pmf         moderate                  1  # plot the predictions and oracle values ggplot() +   geom_raster(     mapping = aes(x = target_end_date, y = output_type_id, fill = value),     data = forecasts_to_plot   ) +   scale_fill_viridis_c(     breaks = seq(from = 0, to = 1, by = 0.2),     limits = c(0, 1)   ) +   geom_point(     mapping = aes(x = target_end_date, y = output_type_id,                   shape = factor(oracle_value)),     color = \"#888888\",     size = 3, stroke = 2,     data = oracle_outputs_to_plot,   ) +   scale_shape_manual(     values = c(1, 3),     breaks = c(0, 1)   ) +   facet_grid(rows = vars(model_id), cols = vars(location)) +   ylab(\"output_type_id (intensity level category)\")"},{"path":"https://hubverse-org.github.io/hubExamples/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Evan L Ray. Author, maintainer. Becky Sweger. Author. Lucie Contamin. Author.","code":""},{"path":"https://hubverse-org.github.io/hubExamples/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ray E, Sweger B, Contamin L (2025). hubExamples: Example Hub Data. R package version 0.1.0, https://github.com/hubverse-org/hubExamples.","code":"@Manual{,   title = {hubExamples: Example Hub Data},   author = {Evan L Ray and Becky Sweger and Lucie Contamin},   year = {2025},   note = {R package version 0.1.0},   url = {https://github.com/hubverse-org/hubExamples}, }"},{"path":"https://hubverse-org.github.io/hubExamples/index.html","id":"hubexamples-","dir":"","previous_headings":"","what":"Example Hub Data","title":"Example Hub Data","text":"goal hubExamples provide example data forecasting scenario modeling hubs hubverse format. package part hubverse ecosystem, aims provide set tools infectious disease modeling hubs share collaborate work.","code":""},{"path":[]},{"path":"https://hubverse-org.github.io/hubExamples/index.html","id":"latest","dir":"","previous_headings":"Installation","what":"Latest","title":"Example Hub Data","text":"can install latest version hubExamples R-universe:","code":"install.packages(\"hubExamples\", repos = c(\"https://hubverse-org.r-universe.dev\", \"https://cloud.r-project.org\"))"},{"path":"https://hubverse-org.github.io/hubExamples/index.html","id":"development","dir":"","previous_headings":"Installation","what":"Development","title":"Example Hub Data","text":"want test new features yet released, can install development version hubExamples GitHub :","code":"# install.packages(\"remotes\") remotes::install_github(\"hubverse-org/hubExamples\")"},{"path":"https://hubverse-org.github.io/hubExamples/index.html","id":"example-forecast-hub-data","dir":"","previous_headings":"","what":"Example forecast hub data","title":"Example Hub Data","text":"package provides three data sets contain example model output target data example forecast hub: forecast_outputs, forecast_target_ts, forecast_oracle_output. Please see package documentation information data objects.","code":"library(hubExamples) head(forecast_outputs) #>            model_id reference_date          target horizon location #> 1 Flusight-baseline     2022-11-19 wk inc flu hosp       0       25 #> 2 Flusight-baseline     2022-11-19 wk inc flu hosp       0       25 #> 3 Flusight-baseline     2022-11-19 wk inc flu hosp       0       25 #> 4 Flusight-baseline     2022-11-19 wk inc flu hosp       0       25 #> 5 Flusight-baseline     2022-11-19 wk inc flu hosp       0       25 #> 6 Flusight-baseline     2022-11-19 wk inc flu hosp       0       25 #>   target_end_date output_type output_type_id value #> 1      2022-11-19    quantile           0.05    22 #> 2      2022-11-19    quantile            0.1    31 #> 3      2022-11-19    quantile           0.25    45 #> 4      2022-11-19    quantile            0.5    51 #> 5      2022-11-19    quantile           0.75    57 #> 6      2022-11-19    quantile            0.9    71 head(forecast_target_ts) #>         date location observation #> 1 2020-01-11       01           0 #> 2 2020-01-11       15           0 #> 3 2020-01-11       18           0 #> 4 2020-01-11       27           0 #> 5 2020-01-11       30           0 #> 6 2020-01-11       37           0 head(forecast_oracle_output) #>   location target_end_date          target output_type output_type_id #> 1       US      2022-10-22 wk inc flu hosp    quantile           <NA> #> 2       01      2022-10-22 wk inc flu hosp    quantile           <NA> #> 3       02      2022-10-22 wk inc flu hosp    quantile           <NA> #> 4       04      2022-10-22 wk inc flu hosp    quantile           <NA> #> 5       05      2022-10-22 wk inc flu hosp    quantile           <NA> #> 6       06      2022-10-22 wk inc flu hosp    quantile           <NA> #>   oracle_value #> 1         2380 #> 2          141 #> 3            3 #> 4           22 #> 5           50 #> 6          124"},{"path":"https://hubverse-org.github.io/hubExamples/index.html","id":"example-scenario-hub-data","dir":"","previous_headings":"","what":"Example scenario hub data","title":"Example Hub Data","text":"package provides two data sets contain example model output target data example scenario hub: scenario_outputs scenario_target_ts. Please see package documentation information data objects.","code":"head(scenario_outputs) #>          model_id origin_date  scenario_id location   target horizon #> 1 HUBuni-simexamp  2021-03-07 A-2021-03-05       US inc case       1 #> 2 HUBuni-simexamp  2021-03-07 A-2021-03-05       US inc case       1 #> 3 HUBuni-simexamp  2021-03-07 A-2021-03-05       US inc case       1 #> 4 HUBuni-simexamp  2021-03-07 A-2021-03-05       US inc case       1 #> 5 HUBuni-simexamp  2021-03-07 A-2021-03-05       US inc case       1 #> 6 HUBuni-simexamp  2021-03-07 A-2021-03-05       US inc case       1 #>   output_type output_type_id    value #> 1    quantile          0.010 292495.9 #> 2    quantile          0.025 308584.4 #> 3    quantile          0.050 312990.6 #> 4    quantile          0.100 327375.0 #> 5    quantile          0.150 337199.4 #> 6    quantile          0.200 345255.6 head(scenario_target_ts) #>   location       date observation   target #> 1       US 2020-10-03      300678 inc case #> 2       US 2020-10-10      334493 inc case #> 3       US 2020-10-17      388282 inc case #> 4       US 2020-10-24      484422 inc case #> 5       US 2020-10-31      571389 inc case #> 6       US 2020-11-07      776479 inc case"},{"path":"https://hubverse-org.github.io/hubExamples/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Example Hub Data","text":"Please note hubExamples package released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://hubverse-org.github.io/hubExamples/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Example Hub Data","text":"Interested contributing back open-source Hubverse project? Learn get involved Hubverse Community contribute hubExamples package.","code":""},{"path":"https://hubverse-org.github.io/hubExamples/reference/forecast_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Example forecast hub data — forecast_data","title":"Example forecast hub data — forecast_data","text":"hubExamples package provides three data sets contain example model output target data example forecast hub: forecast_outputs, forecast_target_ts, forecast_oracle_output. forecast_outputs contains example forecast data represents model outputs forecast hub predictions three influenza-related targets (wk inc flu hosp, wk flu hops rate category, wk flu hosp rate) two reference dates 2022. dataset reflects forecast outputs look retrieved hub via hubData package (slightly different look originally submitted modelers). forecast_target_ts contains time series target data hub predicts influenza-related targets. forecast_oracle_output represents predictions generated \"oracle model\" knew observed data values advance. example represents influenza-related targets corresponding forecast_outputs.","code":""},{"path":"https://hubverse-org.github.io/hubExamples/reference/forecast_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example forecast hub data — forecast_data","text":"","code":"forecast_outputs  forecast_target_ts  forecast_oracle_output"},{"path":[]},{"path":"https://hubverse-org.github.io/hubExamples/reference/forecast_data.html","id":"forecast-outputs","dir":"Reference","previous_headings":"","what":"forecast_outputs","title":"Example forecast hub data — forecast_data","text":"data frame 10,224 rows 9 columns: model_id name model reference_date starting point forecast yyyy-mm-dd format target unique identifier target horizon number time units ahead forecasted relative reference_date, units weeks location FIPS code identifying location target_end_date date occurrence outcome interest yyyy-mm-dd format; can calculated directly reference_date horizon follows: target_end_date = reference_date + 7*horizon output_type type representation prediction output_type_id identifying information specific output type; output_type_id relevant every kind output_type (example, hubs expect output_type_id values output_type mean median value model’s prediction","code":""},{"path":"https://hubverse-org.github.io/hubExamples/reference/forecast_data.html","id":"forecast-target-ts","dir":"Reference","previous_headings":"","what":"forecast_target_ts","title":"Example forecast hub data — forecast_data","text":"data frame 10,255 rows 3 columns: date date target observation yyyy-mm-dd format location FIPS code identifying location observation count hospital admissions given location week ending given date.","code":""},{"path":"https://hubverse-org.github.io/hubExamples/reference/forecast_data.html","id":"forecast-oracle-output","dir":"Reference","previous_headings":"","what":"forecast_oracle_output","title":"Example forecast hub data — forecast_data","text":"data frame 200,340 rows 6 columns: location FIPS code identifying location target_end_date target's observation date yyyy-mm-dd format; used match target_end_date field model output data submitted hub target unique identifier target output_type type representation prediction output_type_id identifying information specific output type; model output data, output_type_id relevant output_type mean median; target data represents quantile output_type output_type_id. oracle_value predicted value generated observed data known certainty advance.","code":""},{"path":"https://hubverse-org.github.io/hubExamples/reference/forecast_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example forecast hub data — forecast_data","text":"https://github.com/hubverse-org/example-complex-forecast-hub/","code":""},{"path":"https://hubverse-org.github.io/hubExamples/reference/scenario_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Example scenario hub data — scenario_data","title":"Example scenario hub data — scenario_data","text":"hubExamples package provides two data sets contain example model output target data example scenario hub: scenario_outputs scenario_target_ts. scenario_outputs contains example scenario projection data represents model outputs ensemble scenario hub predictions one target (inc hosp) one location (\"US\"), one round (\"2021-03-07\") four scenarios. dataset reflects scenario projection outputs look retrieved hub via hubData package (slightly different look originally submitted modelers), \"mean\" ensemble calculated hubEnsemble package simple_ensemble() function default parameters. date occurrence outcome interest yyyy-mm-dd format can calculated directly origin_date horizon follows: target_end_date = origin_date + (7 * horizon) - 1 scenario_target_ts contains time series target data associated scenario projection data.","code":""},{"path":"https://hubverse-org.github.io/hubExamples/reference/scenario_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example scenario hub data — scenario_data","text":"","code":"scenario_outputs  scenario_target_ts"},{"path":[]},{"path":"https://hubverse-org.github.io/hubExamples/reference/scenario_data.html","id":"scenario-outputs","dir":"Reference","previous_headings":"","what":"scenario_outputs","title":"Example scenario hub data — scenario_data","text":"data frame 7,176 rows 9 columns: model_id name model origin_date starting point projection yyyy-mm-dd format scenario_id unique identifier scenario location FIPS code identifying location target unique identifier target horizon number time units ahead projected relative origin_date, units weeks output_type type representation prediction; example, values output_type \"quantile\". output_type_id identifying information specific output type; , output_type_id specifies probability level quantile prediction value model’s prediction","code":""},{"path":"https://hubverse-org.github.io/hubExamples/reference/scenario_data.html","id":"scenario-target-ts","dir":"Reference","previous_headings":"","what":"scenario_target_ts","title":"Example scenario hub data — scenario_data","text":"data frame 127 rows 3 columns: location FIPS code identifying location date date target observation yyyy-mm-dd format observation count incident cases given location week ending given date. target unique identifier target","code":""},{"path":"https://hubverse-org.github.io/hubExamples/reference/scenario_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example scenario hub data — scenario_data","text":"https://github.com/hubverse-org/example-complex-scenario-hub/","code":""},{"path":"https://hubverse-org.github.io/hubExamples/news/index.html","id":"hubexamples-010","dir":"Changelog","previous_headings":"","what":"hubExamples 0.1.0","title":"hubExamples 0.1.0","text":"Soft dependency hubVis version bumped 0.1.0 greater Update vignette use model_out_tbl argument name hubVis (#36) Replace forecast_target_observations.rda forecast_oracle_output.rda (#38) Update documentation forecast_oracle_output, forecast_outputs, forecast_target_ts. Update vignette forecast data reflect oracle output terminology.","code":""},{"path":"https://hubverse-org.github.io/hubExamples/news/index.html","id":"hubexamples-001","dir":"Changelog","previous_headings":"","what":"hubExamples 0.0.1","title":"hubExamples 0.0.1","text":"First released version forecast scenario examples","code":""}]
